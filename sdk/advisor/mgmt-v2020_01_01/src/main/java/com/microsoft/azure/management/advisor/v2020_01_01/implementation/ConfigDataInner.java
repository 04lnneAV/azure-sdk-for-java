/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.advisor.v2020_01_01.implementation;

import com.microsoft.azure.management.advisor.v2020_01_01.CpuThreshold;
import java.util.List;
import com.microsoft.azure.management.advisor.v2020_01_01.DigestConfig;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * The Advisor configuration data structure.
 */
@JsonFlatten
public class ConfigDataInner extends ProxyResource {
    /**
     * Exclude the resource from Advisor evaluations. Valid values: False
     * (default) or True.
     */
    @JsonProperty(value = "properties.exclude")
    private Boolean exclude;

    /**
     * Minimum percentage threshold for Advisor low CPU utilization evaluation.
     * Valid only for subscriptions. Valid values: 5 (default), 10, 15 or 20.
     * Possible values include: '5', '10', '15', '20'.
     */
    @JsonProperty(value = "properties.lowCpuThreshold")
    private CpuThreshold lowCpuThreshold;

    /**
     * Advisor digest configuration. Valid only for subscriptions.
     */
    @JsonProperty(value = "properties.digests")
    private List<DigestConfig> digests;

    /**
     * Get exclude the resource from Advisor evaluations. Valid values: False (default) or True.
     *
     * @return the exclude value
     */
    public Boolean exclude() {
        return this.exclude;
    }

    /**
     * Set exclude the resource from Advisor evaluations. Valid values: False (default) or True.
     *
     * @param exclude the exclude value to set
     * @return the ConfigDataInner object itself.
     */
    public ConfigDataInner withExclude(Boolean exclude) {
        this.exclude = exclude;
        return this;
    }

    /**
     * Get minimum percentage threshold for Advisor low CPU utilization evaluation. Valid only for subscriptions. Valid values: 5 (default), 10, 15 or 20. Possible values include: '5', '10', '15', '20'.
     *
     * @return the lowCpuThreshold value
     */
    public CpuThreshold lowCpuThreshold() {
        return this.lowCpuThreshold;
    }

    /**
     * Set minimum percentage threshold for Advisor low CPU utilization evaluation. Valid only for subscriptions. Valid values: 5 (default), 10, 15 or 20. Possible values include: '5', '10', '15', '20'.
     *
     * @param lowCpuThreshold the lowCpuThreshold value to set
     * @return the ConfigDataInner object itself.
     */
    public ConfigDataInner withLowCpuThreshold(CpuThreshold lowCpuThreshold) {
        this.lowCpuThreshold = lowCpuThreshold;
        return this;
    }

    /**
     * Get advisor digest configuration. Valid only for subscriptions.
     *
     * @return the digests value
     */
    public List<DigestConfig> digests() {
        return this.digests;
    }

    /**
     * Set advisor digest configuration. Valid only for subscriptions.
     *
     * @param digests the digests value to set
     * @return the ConfigDataInner object itself.
     */
    public ConfigDataInner withDigests(List<DigestConfig> digests) {
        this.digests = digests;
        return this;
    }

}
